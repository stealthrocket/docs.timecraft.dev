"use strict";(self.webpackChunkdocs_timecraft_dev=self.webpackChunkdocs_timecraft_dev||[]).push([[394],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},m="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,u=m["".concat(l,".").concat(d)]||m[d]||h[d]||r;return n?o.createElement(u,i(i({ref:t},p),{},{components:n})):o.createElement(u,i({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2235:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=n(7462),a=(n(7294),n(3905));const r={},i="Host TLS offload",s={unversionedId:"networking/htls",id:"networking/htls",title:"Host TLS offload",description:"Timecraft provides host TLS offload (hTLS). After a socket is open, timecraft",source:"@site/docs/networking/htls.md",sourceDirName:"networking",slug:"/networking/htls",permalink:"/networking/htls",draft:!1,editUrl:"https://github.com/stealthrocket/docs.timecraft.dev/tree/main/docs/networking/htls.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Networking",permalink:"/category/networking"}},l={},c=[{value:"Usage",id:"usage",level:2},{value:"Go",id:"go",level:3},{value:"Python",id:"python",level:3},{value:"C",id:"c",level:3},{value:"Other",id:"other",level:3},{value:"How it works",id:"how-it-works",level:2}],p={toc:c},m="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"host-tls-offload"},"Host TLS offload"),(0,a.kt)("p",null,"Timecraft provides host TLS offload (hTLS). After a socket is open, timecraft\ncan be instructed to wrap it in a TLS tunnel. Once it is, reads and writes on\nthe socket are transparently encrypted and decrypted. It allows the WebAssembly\nguest to delegate offload TLS operations to the host. This has multiple\nadvantages over performing encryption in the guest:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"it reduces the code complexity of the guest,"),(0,a.kt)("li",{parentName:"ul"},"significantly increases performance (cryptography operations can be\nprohibitively expensive in WebAssembly at the moment),"),(0,a.kt)("li",{parentName:"ul"},"makes all built-in Timeceraft ",(0,a.kt)("a",{parentName:"li",href:"/using-timecraft/execution-tracing"},"network and syscall tracing"),"\nfeatures work seamlessly with no additional configuration.")),(0,a.kt)("p",null,"At the moment, only client-side TLS is supported, with no configuration\nabilities. Server-side and further configuration options will be supported as\nneeded. ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/stealthrocket/timecraft"},"Send a pull request!")),(0,a.kt)("p",null,"At a very high level, hTLS works by setting a special option on a socket. How\nto set that option is described in the ",(0,a.kt)("a",{parentName:"p",href:"#usage"},"Usage")," section below. Socket\noptions have a level and an option name. In this document we use the following\nconstants to refer to them:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"TIMECRAFT_LEVEL = 0x74696d65"),": the socket level of the socket option."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"HTLS_OPTION = 1"),": the name of the hTLS option.")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"After opening a socket, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"sock_setsockopt")," host function to set the\noption ",(0,a.kt)("inlineCode",{parentName:"p"},"HTLS_OPTION")," of level ",(0,a.kt)("inlineCode",{parentName:"p"},"TIMECRAFT_LEVEL")," to the hostname to connect to."),(0,a.kt)("h3",{id:"go"},"Go"),(0,a.kt)("p",null,"When importing the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/stealthrocket/timecraft/tree/main/sdk/go/timecraft"},"Timecraft Go SDK"),", the ",(0,a.kt)("inlineCode",{parentName:"p"},"net/http.DefaultTransport"),"\nis automatically modified to take advantage of hTLS. As a result, the standard\nlibrary default HTTP client can be used directly without extra step:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'import "net/http"\n\n// will do hTLS to example.com behind the scenes\nhttp.Client.Get("https://example.com")\n')),(0,a.kt)("p",null,"Alternatively, the dial function ",(0,a.kt)("inlineCode",{parentName:"p"},"timecraft.DialTLS")," that can be used to\nestablish a ",(0,a.kt)("inlineCode",{parentName:"p"},"net.Conn")," with hTLS enabled. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'conn, err := timecraft.DialTLS(context.Background(), "tcp", "example.com:443")\nif err != nil {\n    // handle error\n}\n// conn is a net.Conn\nfmt.Fprintf(conn, "GET / HTTP/1.0\\r\\n\\r\\n")\n')),(0,a.kt)("h3",{id:"python"},"Python"),(0,a.kt)("p",null,"When using ",(0,a.kt)("a",{parentName:"p",href:"/getting-started/prep-application/compiling-python"},"Timecraft CPython distribution"),", the built-in ",(0,a.kt)("inlineCode",{parentName:"p"},"ssl")," module\nwill perform hTLS automatically. As a result, most libraries will use it out of\nthe box. For example with the popular ",(0,a.kt)("a",{parentName:"p",href:"https://requests.readthedocs.io/en/latest/"},"requests")," HTTP library:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'import requests\n\n# does hTLS to example.com behind the scenes\nrequests.get("https://example.com")\n')),(0,a.kt)("p",null,"If you want to use ",(0,a.kt)("inlineCode",{parentName:"p"},"ssl")," yourself, create an ",(0,a.kt)("inlineCode",{parentName:"p"},"SSLContext")," and use ",(0,a.kt)("inlineCode",{parentName:"p"},"wrap_socket"),"\non an existing socket. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import socket\nimport ssl\n\nhostname = 'example.com'\ncontext = ssl.create_default_context()\n\nbuf = bytearray(1024)\nview = memoryview(buf)\n\nwith socket.create_connection((hostname, 443)) as sock:\n    with context.wrap_socket(sock, server_hostname=hostname) as ssock:\n        b = ssock.sendall(b\"GET / HTTP/1.1\\r\\nHost: example.com:443\\r\\n\\r\\n\")\n        nbytes = ssock.recv_into(view, 1024)\n        print(buf[:nbytes])\n")),(0,a.kt)("h3",{id:"c"},"C"),(0,a.kt)("p",null,"Using ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/stealthrocket/wasi-libc/tree/d704f269682cc75da51de94166b79a39e3fe42b4"},"wasi-libc"),", use ",(0,a.kt)("inlineCode",{parentName:"p"},"setsockopt")," on an existing socket, before\nperforming a send/recv operation. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'\nstruct addrinfo hints, *res;\nmemset(&hints, 0, sizeof(hints));\nhints.ai_family = AF_UNSPEC;\nhints.ai_socktype = SOCK_STREAM;\ngetaddrinfo("example.com", "443", &hints, &res);\n\nint sock = socket(res->ai_family, res->ai_socktype, res->ai_protocol);\nconnect(sock, res->ai_addr, res->ai_addrlen);\nsetsockopt(sock, TIMECRAFT_LEVEL, HTLS_OPTION, "example.com", sizeof("example.com"));\n\n// send/recv...\n')),(0,a.kt)("h3",{id:"other"},"Other"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a socket with the WASM host function socket\n",(0,a.kt)("inlineCode",{parentName:"li"},"wasi_snapshot_preview1.sock_open"),"."),(0,a.kt)("li",{parentName:"ol"},"Connect the socket with WASM host function socket\n",(0,a.kt)("inlineCode",{parentName:"li"},"wasi_snapshot_preview1.sock_connect"),"."),(0,a.kt)("li",{parentName:"ol"},"Set the option ",(0,a.kt)("inlineCode",{parentName:"li"},"HTLS_OPTION")," of level ",(0,a.kt)("inlineCode",{parentName:"li"},"TIMECRAFT_LEVEL")," to the hostname of\nthe server using ",(0,a.kt)("inlineCode",{parentName:"li"},"wasi_snapshot_preview1.sock_setsockopt"),"."),(0,a.kt)("li",{parentName:"ol"},"Use the socket knowing hTLS is enabled.")),(0,a.kt)("h2",{id:"how-it-works"},"How it works"),(0,a.kt)("p",null,"hTLS works similarly to ",(0,a.kt)("a",{parentName:"p",href:"https://docs.kernel.org/networking/tls-offload.html"},"Kernel TLS (kTLS)"),". First a socket is created,\nthen a socket option is used to indicate to the host that it should enable hTLS.\nA couple significant differences with kTLS:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The socket option can be performed after the socket is connected, but not\nafter the first ",(0,a.kt)("inlineCode",{parentName:"li"},"recv"),"/",(0,a.kt)("inlineCode",{parentName:"li"},"send"),"/",(0,a.kt)("inlineCode",{parentName:"li"},"poll")," operation."),(0,a.kt)("li",{parentName:"ul"},"The host performs the handshake and certificate validation.")),(0,a.kt)("p",null,"When the socket is connected, the host performs the TLS handshake immediately.\nIn non-blocking mode, polling the socket returns ",(0,a.kt)("inlineCode",{parentName:"p"},"EINPROGRESS")," until the\nhandshake has completed or errored."),(0,a.kt)("p",null,"Timecraft uses Go's TLS stack to implement hTLS. The main implication is that\ncertificate validation is performed using the default certificates available to\nthe host Go runtime, and all behaviors follow Go's built-in ",(0,a.kt)("inlineCode",{parentName:"p"},"crypto/tls")," module."),(0,a.kt)("mermaid",{value:'sequenceDiagram\n    Guest->>Host: socket()\n    Host--\x3e>Guest: fd=4\n\tGuest->>Host: connect("example.com", 443)\n\tGuest->>Host: setsockopt(4, TIMECRAFT_OPTION, HTLS_OPTION, "example.com")\n\tHost->>Example.com: dial\n\tHost->Example.com: TLS handshake\n\tloop connection is ready\n\t\tGuest->>Host: send (clear)\n\t\tHost->>Example.com: send (TLS)\n\t\tHost->>Guest: recv (clear)\n\t\tExample.com->>Host: recv (TLS)\n\tend'}))}h.isMDXComponent=!0}}]);